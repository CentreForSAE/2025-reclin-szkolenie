---
title: "R Notebook"
output:
  html_notebook:
  html_document:
    df_print: paged
---

Wczytujemy bibliotekę reclin2

```{r echo=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(reclin2)
```

Wczytujemy małe, przykładowe dane

```{r}
dane1 <- read.csv("dane/zbior3a.csv")
dane2 <- read.csv("dane/zbior3b.csv")
```

Porównywanie dokładnie `cmp_identical()`

```{r}
cmp <- cmp_identical()
x <- cmp(c("john", "mary", "susan", "jack"), 
         c("johan", "mary", "susanna", NA))
x
```

Porównywanie z wykorzystaniem podobieństwa `cmp_jarowinkler()`

```{r}
cmp <- cmp_jarowinkler(0.95)
x <- cmp(c("john", "mary", "susan", "jack"), 
         c("johan", "mary", "susanna", NA))
x
```

```{r}
cmp(x)
```

```{r}
pary <- pair(dane1,dane2)
pary
```

```{r}
pary_comp <- compare_pairs(pairs = pary,
                           on = c("imie", "imie2", "nazwisko", "adres"))
print(pary_comp)
```
Proste porównanie parami

```{r}
score_prosty <- score_simple(pary_comp, "score", 
                             on = c("imie", "imie2", "nazwisko", "adres"))
score_prosty
```

Porównanie z wykorzystaniem porównania tekstów

```{r}
pary_jw <- compare_pairs(pairs = pary,
                         on = c("imie", "imie2", "nazwisko", "adres"), 
                         default_comparator = cmp_jarowinkler())

score_jw_prosty <- score_simple(pary_jw, "score", 
                                on = c("imie", "imie2", "nazwisko", "adres"))
score_jw_prosty
```

Algorytm EM - dla małych danych jest niezbyt sensowny

```{r}
score <- problink_em(~ imie + imie2 + nazwisko + adres,
                     data = pary_comp)
score
```

Wybieramy rekordy, które są parami

```{r}
pary_comp <- select_threshold(score_prosty, "threshold", score = "score", threshold = 2)
pary_comp
```

Łączymy dane

```{r}
dane_wynikowe <- link(pary_comp, selection = "threshold")
dane_wynikowe
```

```{r}
dane_wynikowe <- link(pary_comp, selection = "threshold", all_y = TRUE)
dane_wynikowe
```

Porównanie z wykorzystaniem jaro winklera

```{r}
pary_comp <- select_threshold(score_jw_prosty, "threshold", score = "score", threshold = 2)
pary_comp
```

Zapis wyników

```{r}
dane_wynikowe <- link(pary_comp, selection = "threshold")
dane_wynikowe
```


Potokowe przetwarzanie danych


```{r}
pair(dane1,dane2) |>
  compare_pairs(on = c("imie", "imie2", "nazwisko", "adres"), 
                default_comparator = cmp_jarowinkler()) |>
  score_simple("score",
               on = c("imie", "imie2", "nazwisko", "adres")) |>
  select_threshold("threshold", score = "score", threshold = 2) |>
  link(selection = "threshold")
```

Porównanie jak dobrze sobie radzimy

```{r}
pair(dane1,dane2) |>
  compare_pairs(on = c("imie", "imie2", "nazwisko", "adres"), 
                default_comparator = cmp_jarowinkler()) |>
  score_simple("score",
               on = c("imie", "imie2", "nazwisko", "adres")) |>
  select_threshold("threshold", score = "score", threshold = 2) |>
  transform(prawda = .x == .y) |>
  xtabs(~ prawda + threshold, data = _)
```

